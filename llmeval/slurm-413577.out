loaded anaconda
loaded cuda
activated conda environment
changed directory to /home/jsalvador/projects/llmeval
[[33mINFO[0m] running infill_solve using meta-llama/Llama-3.3-70B-Instruct
[[33mINFO[0m] fetching subsample IDs
counting prompt variations
[[33mINFO[0m] unique template_name query took 2014.24 seconds
[[33mINFO[0m] unique template_id query took 194.14 seconds
[[33mINFO[0m] unique sys_id query took 40.64 seconds
fitb_l0, tids: 1, sids: 6
[[33mINFO[0m] counting samples from each query
[[33mINFO[0m] counting samples took 0.15 seconds
[[33mINFO[0m] unique template_id query took 41.79 seconds
[[33mINFO[0m] unique sys_id query took 40.70 seconds
fitb_l1, tids: 4, sids: 6
[[33mINFO[0m] counting samples from each query
[[33mINFO[0m] counting samples took 0.07 seconds
[[33mINFO[0m] unique template_id query took 41.73 seconds
[[33mINFO[0m] unique sys_id query took 40.55 seconds
fitb_l2, tids: 5, sids: 6
[[33mINFO[0m] counting samples from each query
[[33mINFO[0m] counting samples took 0.09 seconds
[[33mINFO[0m] unique template_id query took 40.55 seconds
[[33mINFO[0m] unique sys_id query took 40.58 seconds
fitb_l3, tids: 5, sids: 6
[[33mINFO[0m] counting samples from each query
[[33mINFO[0m] counting samples took 0.10 seconds
[[33mINFO[0m] unique template_id query took 41.97 seconds
[[33mINFO[0m] unique sys_id query took 40.72 seconds
fitb_l4, tids: 6, sids: 6
[[33mINFO[0m] counting samples from each query
[[33mINFO[0m] counting samples took 0.11 seconds
[[33mINFO[0m] batch_size: 1000, limit: 1000, N: 126000, N_batch: 126
creating generator function
[[33mINFO[0m] loading model: meta-llama/Llama-3.3-70B-Instruct
WARNING 01-24 12:34:25 config.py:319] bitsandbytes quantization is not fully optimized yet. The speed can be slower than non-quantized models.
WARNING 01-24 12:34:25 arg_utils.py:930] Chunked prefill is enabled by default for models with max_model_len > 32K. Currently, chunked prefill might not work with some features or models. If you encounter any issues, please disable chunked prefill by setting --enable-chunked-prefill=False.
INFO 01-24 12:34:25 config.py:1010] Chunked prefill is enabled with max_num_batched_tokens=512.
WARNING 01-24 12:34:25 config.py:389] To see benefits of async output processing, enable CUDA graph. Since, enforce-eager is enabled, async output processor cannot be used
2025-01-24 12:34:46,447	INFO worker.py:1821 -- Started a local Ray instance.
INFO 01-24 12:35:08 llm_engine.py:226] Initializing an LLM engine (v0.6.1.dev238+ge2c6e0a82) with config: model='meta-llama/Llama-3.3-70B-Instruct', speculative_config=None, tokenizer='meta-llama/Llama-3.3-70B-Instruct', skip_tokenizer_init=False, tokenizer_mode=auto, revision=None, override_neuron_config=None, rope_scaling=None, rope_theta=None, tokenizer_revision=None, trust_remote_code=True, dtype=torch.bfloat16, max_seq_len=50000, download_dir='/lustre/fs1/home/jsalvador/projects/llmeval/data/llm_cache', load_format=LoadFormat.BITSANDBYTES, tensor_parallel_size=2, pipeline_parallel_size=1, disable_custom_all_reduce=False, quantization=bitsandbytes, enforce_eager=True, kv_cache_dtype=auto, quantization_param_path=None, device_config=cuda, decoding_config=DecodingConfig(guided_decoding_backend='outlines'), observability_config=ObservabilityConfig(otlp_traces_endpoint=None, collect_model_forward_time=False, collect_model_execute_time=False), seed=1737740065, served_model_name=meta-llama/Llama-3.3-70B-Instruct, use_v2_block_manager=False, num_scheduler_steps=1, multi_step_stream_outputs=False, enable_prefix_caching=False, use_async_output_proc=False, use_cached_outputs=False, mm_processor_kwargs=None)
INFO 01-24 12:35:09 ray_gpu_executor.py:134] use_ray_spmd_worker: False
INFO 01-24 12:36:23 utils.py:992] Found nccl from library libnccl.so.2
INFO 01-24 12:36:23 pynccl.py:63] vLLM is using nccl==2.20.5
[36m(RayWorkerWrapper pid=1452485)[0m INFO 01-24 12:36:23 utils.py:992] Found nccl from library libnccl.so.2
[36m(RayWorkerWrapper pid=1452485)[0m INFO 01-24 12:36:23 pynccl.py:63] vLLM is using nccl==2.20.5
INFO 01-24 12:36:26 custom_all_reduce_utils.py:242] reading GPU P2P access cache from /home/jsalvador/.cache/vllm/gpu_p2p_access_cache_for_0,1.json
[36m(RayWorkerWrapper pid=1452485)[0m INFO 01-24 12:36:26 custom_all_reduce_utils.py:242] reading GPU P2P access cache from /home/jsalvador/.cache/vllm/gpu_p2p_access_cache_for_0,1.json
INFO 01-24 12:36:27 shm_broadcast.py:241] vLLM message queue communication handle: Handle(connect_ip='127.0.0.1', local_reader_ranks=[1], buffer=<vllm.distributed.device_communicators.shm_broadcast.ShmRingBuffer object at 0x15242a9b4f50>, local_subscribe_port=32769, remote_subscribe_port=None)
INFO 01-24 12:36:27 model_runner.py:1014] Starting to load model meta-llama/Llama-3.3-70B-Instruct...
[36m(RayWorkerWrapper pid=1452485)[0m INFO 01-24 12:36:27 model_runner.py:1014] Starting to load model meta-llama/Llama-3.3-70B-Instruct...
INFO 01-24 12:36:29 loader.py:1014] Loading weights with BitsAndBytes quantization.  May take a while ...
[36m(RayWorkerWrapper pid=1452485)[0m INFO 01-24 12:36:29 loader.py:1014] Loading weights with BitsAndBytes quantization.  May take a while ...
INFO 01-24 12:36:29 weight_utils.py:242] Using model weights format ['*.safetensors']
[36m(RayWorkerWrapper pid=1452485)[0m INFO 01-24 12:36:29 weight_utils.py:242] Using model weights format ['*.safetensors']
Loading safetensors checkpoint shards:   0% Completed | 0/30 [00:00<?, ?it/s]
Loading safetensors checkpoint shards:   3% Completed | 1/30 [00:08<03:54,  8.09s/it]
Loading safetensors checkpoint shards:   7% Completed | 2/30 [00:14<03:18,  7.08s/it]
Loading safetensors checkpoint shards:  10% Completed | 3/30 [00:22<03:21,  7.45s/it]
Loading safetensors checkpoint shards:  13% Completed | 4/30 [00:27<02:51,  6.59s/it]
Loading safetensors checkpoint shards:  17% Completed | 5/30 [00:32<02:33,  6.13s/it]
Loading safetensors checkpoint shards:  20% Completed | 6/30 [00:39<02:26,  6.11s/it]
Loading safetensors checkpoint shards:  23% Completed | 7/30 [00:46<02:28,  6.46s/it]
Loading safetensors checkpoint shards:  27% Completed | 8/30 [00:54<02:33,  6.98s/it]
Loading safetensors checkpoint shards:  30% Completed | 9/30 [01:00<02:24,  6.86s/it]
Loading safetensors checkpoint shards:  33% Completed | 10/30 [01:06<02:07,  6.36s/it]
Loading safetensors checkpoint shards:  37% Completed | 11/30 [01:09<01:46,  5.58s/it]
Loading safetensors checkpoint shards:  40% Completed | 12/30 [01:16<01:46,  5.94s/it]
Loading safetensors checkpoint shards:  43% Completed | 13/30 [01:21<01:35,  5.64s/it]
Loading safetensors checkpoint shards:  47% Completed | 14/30 [01:28<01:38,  6.14s/it]
Loading safetensors checkpoint shards:  50% Completed | 15/30 [01:35<01:32,  6.15s/it]
Loading safetensors checkpoint shards:  53% Completed | 16/30 [01:42<01:31,  6.57s/it]
Loading safetensors checkpoint shards:  57% Completed | 17/30 [01:49<01:25,  6.57s/it]
Loading safetensors checkpoint shards:  60% Completed | 18/30 [01:55<01:17,  6.48s/it]
Loading safetensors checkpoint shards:  63% Completed | 19/30 [02:04<01:19,  7.27s/it]
Loading safetensors checkpoint shards:  67% Completed | 20/30 [02:09<01:06,  6.68s/it]
Loading safetensors checkpoint shards:  70% Completed | 21/30 [02:17<01:03,  7.01s/it]
Loading safetensors checkpoint shards:  73% Completed | 22/30 [02:23<00:53,  6.71s/it]
Loading safetensors checkpoint shards:  77% Completed | 23/30 [02:29<00:44,  6.35s/it]
Loading safetensors checkpoint shards:  80% Completed | 24/30 [02:36<00:38,  6.49s/it]
Loading safetensors checkpoint shards:  83% Completed | 25/30 [02:42<00:31,  6.36s/it]
Loading safetensors checkpoint shards:  87% Completed | 26/30 [02:48<00:25,  6.46s/it]
Loading safetensors checkpoint shards:  90% Completed | 27/30 [02:56<00:20,  6.72s/it]
Loading safetensors checkpoint shards:  93% Completed | 28/30 [03:03<00:13,  6.86s/it]
Loading safetensors checkpoint shards:  97% Completed | 29/30 [03:07<00:06,  6.20s/it]
Loading safetensors checkpoint shards: 100% Completed | 30/30 [03:16<00:00,  6.85s/it]
Loading safetensors checkpoint shards: 100% Completed | 30/30 [03:16<00:00,  6.54s/it]

[36m(RayWorkerWrapper pid=1452485)[0m INFO 01-24 12:39:47 model_runner.py:1025] Loading model weights took 18.4395 GB
INFO 01-24 12:39:50 model_runner.py:1025] Loading model weights took 18.4395 GB
INFO 01-24 12:39:57 distributed_gpu_executor.py:57] # GPU blocks: 20819, # CPU blocks: 1638
[[33mINFO[0m] begin collecting responses
generating responses:   0%|          | 0/378 [00:00<?, ?it/s]generating responses:  96%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–Œ| 362/378 [21:44<00:57,  3.60s/it]generating responses:  96%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–Œ| 363/378 [45:32<02:18,  9.20s/it][2025-01-24 14:13:58,136 E 1451557 1456144] gcs_rpc_client.h:664: Failed to connect to GCS within 60 seconds. GCS may have been killed. It's either GCS is terminated by `ray stop` or is killed unexpectedly. If it is killed unexpectedly, see the log file gcs_server.out. https://docs.ray.io/en/master/ray-observability/user-guides/configure-logging.html#logging-directory-structure. The program will terminate.
