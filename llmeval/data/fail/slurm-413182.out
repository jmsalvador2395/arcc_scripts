loaded anaconda
loaded cuda
activated conda environment
changed directory to /home/jsalvador/projects/llmeval
[[33mINFO[0m] running infill_solve using meta-llama/Llama-3.3-70B-Instruct
[[33mINFO[0m] fetching subsample IDs
counting prompt variations
[[33mINFO[0m] unique template_name query took 4.32 seconds
[[33mINFO[0m] unique template_id query took 0.01 seconds
[[33mINFO[0m] unique sys_id query took 0.01 seconds
fitb_l1, tids: 4, sids: 1
[[33mINFO[0m] counting samples from each query
[[33mINFO[0m] counting samples took 0.01 seconds
[[33mINFO[0m] unique template_id query took 0.01 seconds
[[33mINFO[0m] unique sys_id query took 0.01 seconds
fitb_l2, tids: 4, sids: 1
[[33mINFO[0m] counting samples from each query
[[33mINFO[0m] counting samples took 0.01 seconds
[[33mINFO[0m] unique template_id query took 0.01 seconds
[[33mINFO[0m] unique sys_id query took 0.01 seconds
fitb_l3, tids: 4, sids: 1
[[33mINFO[0m] counting samples from each query
[[33mINFO[0m] counting samples took 0.01 seconds
[[33mINFO[0m] unique template_id query took 0.01 seconds
[[33mINFO[0m] unique sys_id query took 0.01 seconds
fitb_l4, tids: 4, sids: 1
[[33mINFO[0m] counting samples from each query
[[33mINFO[0m] counting samples took 0.01 seconds
[[33mINFO[0m] batch_size: 1000, limit: 1000, N: 16000, N_batch: 16
creating generator function
[[33mINFO[0m] loading model: meta-llama/Llama-3.3-70B-Instruct
WARNING 01-22 21:12:07 config.py:319] bitsandbytes quantization is not fully optimized yet. The speed can be slower than non-quantized models.
WARNING 01-22 21:12:07 arg_utils.py:930] Chunked prefill is enabled by default for models with max_model_len > 32K. Currently, chunked prefill might not work with some features or models. If you encounter any issues, please disable chunked prefill by setting --enable-chunked-prefill=False.
INFO 01-22 21:12:07 config.py:1010] Chunked prefill is enabled with max_num_batched_tokens=512.
WARNING 01-22 21:12:07 config.py:389] To see benefits of async output processing, enable CUDA graph. Since, enforce-eager is enabled, async output processor cannot be used
2025-01-22 21:12:17,152	INFO worker.py:1821 -- Started a local Ray instance.
INFO 01-22 21:12:35 llm_engine.py:226] Initializing an LLM engine (v0.6.1.dev238+ge2c6e0a82) with config: model='meta-llama/Llama-3.3-70B-Instruct', speculative_config=None, tokenizer='meta-llama/Llama-3.3-70B-Instruct', skip_tokenizer_init=False, tokenizer_mode=auto, revision=None, override_neuron_config=None, rope_scaling=None, rope_theta=None, tokenizer_revision=None, trust_remote_code=True, dtype=torch.bfloat16, max_seq_len=50000, download_dir='/lustre/fs1/home/jsalvador/projects/llmeval/data/llm_cache', load_format=LoadFormat.BITSANDBYTES, tensor_parallel_size=2, pipeline_parallel_size=1, disable_custom_all_reduce=False, quantization=bitsandbytes, enforce_eager=True, kv_cache_dtype=auto, quantization_param_path=None, device_config=cuda, decoding_config=DecodingConfig(guided_decoding_backend='outlines'), observability_config=ObservabilityConfig(otlp_traces_endpoint=None, collect_model_forward_time=False, collect_model_execute_time=False), seed=1737598325, served_model_name=meta-llama/Llama-3.3-70B-Instruct, use_v2_block_manager=False, num_scheduler_steps=1, multi_step_stream_outputs=False, enable_prefix_caching=False, use_async_output_proc=False, use_cached_outputs=False, mm_processor_kwargs=None)
INFO 01-22 21:12:36 ray_gpu_executor.py:134] use_ray_spmd_worker: False
INFO 01-22 21:13:13 utils.py:992] Found nccl from library libnccl.so.2
INFO 01-22 21:13:13 pynccl.py:63] vLLM is using nccl==2.20.5
[36m(RayWorkerWrapper pid=717117)[0m INFO 01-22 21:13:13 utils.py:992] Found nccl from library libnccl.so.2
[36m(RayWorkerWrapper pid=717117)[0m INFO 01-22 21:13:13 pynccl.py:63] vLLM is using nccl==2.20.5
INFO 01-22 21:13:13 custom_all_reduce_utils.py:242] reading GPU P2P access cache from /home/jsalvador/.cache/vllm/gpu_p2p_access_cache_for_0,1.json
INFO 01-22 21:13:13 shm_broadcast.py:241] vLLM message queue communication handle: Handle(connect_ip='127.0.0.1', local_reader_ranks=[1], buffer=<vllm.distributed.device_communicators.shm_broadcast.ShmRingBuffer object at 0x14ca5d8d5e50>, local_subscribe_port=55409, remote_subscribe_port=None)
INFO 01-22 21:13:13 model_runner.py:1014] Starting to load model meta-llama/Llama-3.3-70B-Instruct...
[36m(RayWorkerWrapper pid=717117)[0m INFO 01-22 21:13:13 custom_all_reduce_utils.py:242] reading GPU P2P access cache from /home/jsalvador/.cache/vllm/gpu_p2p_access_cache_for_0,1.json
[36m(RayWorkerWrapper pid=717117)[0m INFO 01-22 21:13:13 model_runner.py:1014] Starting to load model meta-llama/Llama-3.3-70B-Instruct...
INFO 01-22 21:13:17 loader.py:1014] Loading weights with BitsAndBytes quantization.  May take a while ...
[36m(RayWorkerWrapper pid=717117)[0m INFO 01-22 21:13:17 loader.py:1014] Loading weights with BitsAndBytes quantization.  May take a while ...
INFO 01-22 21:13:17 weight_utils.py:242] Using model weights format ['*.safetensors']
Loading safetensors checkpoint shards:   0% Completed | 0/30 [00:00<?, ?it/s]
Loading safetensors checkpoint shards:   3% Completed | 1/30 [00:07<03:45,  7.77s/it]
Loading safetensors checkpoint shards:   7% Completed | 2/30 [00:14<03:25,  7.35s/it]
Loading safetensors checkpoint shards:  10% Completed | 3/30 [00:21<03:09,  7.02s/it]
Loading safetensors checkpoint shards:  13% Completed | 4/30 [00:29<03:17,  7.61s/it]
Loading safetensors checkpoint shards:  17% Completed | 5/30 [00:34<02:46,  6.66s/it]
Loading safetensors checkpoint shards:  20% Completed | 6/30 [00:43<02:56,  7.37s/it]
Loading safetensors checkpoint shards:  23% Completed | 7/30 [00:52<02:56,  7.69s/it]
Loading safetensors checkpoint shards:  27% Completed | 8/30 [00:58<02:42,  7.40s/it]
Loading safetensors checkpoint shards:  30% Completed | 9/30 [01:07<02:42,  7.76s/it]
Loading safetensors checkpoint shards:  33% Completed | 10/30 [01:14<02:29,  7.45s/it]
Loading safetensors checkpoint shards:  37% Completed | 11/30 [01:18<02:02,  6.45s/it]
Loading safetensors checkpoint shards:  40% Completed | 12/30 [01:27<02:12,  7.34s/it]
Loading safetensors checkpoint shards:  43% Completed | 13/30 [01:34<02:02,  7.23s/it]
Loading safetensors checkpoint shards:  47% Completed | 14/30 [01:41<01:54,  7.15s/it]
Loading safetensors checkpoint shards:  50% Completed | 15/30 [01:48<01:44,  6.96s/it]
Loading safetensors checkpoint shards:  53% Completed | 16/30 [01:55<01:37,  6.95s/it]
Loading safetensors checkpoint shards:  57% Completed | 17/30 [02:02<01:33,  7.23s/it]
Loading safetensors checkpoint shards:  60% Completed | 18/30 [02:09<01:24,  7.02s/it]
Loading safetensors checkpoint shards:  63% Completed | 19/30 [02:17<01:20,  7.32s/it]
Loading safetensors checkpoint shards:  67% Completed | 20/30 [02:22<01:05,  6.59s/it]
Loading safetensors checkpoint shards:  70% Completed | 21/30 [02:31<01:06,  7.39s/it]
Loading safetensors checkpoint shards:  73% Completed | 22/30 [02:37<00:55,  7.00s/it]
Loading safetensors checkpoint shards:  77% Completed | 23/30 [02:42<00:44,  6.41s/it]
Loading safetensors checkpoint shards:  80% Completed | 24/30 [02:48<00:37,  6.33s/it]
Loading safetensors checkpoint shards:  83% Completed | 25/30 [02:55<00:31,  6.34s/it]
Loading safetensors checkpoint shards:  87% Completed | 26/30 [03:02<00:27,  6.75s/it]
Loading safetensors checkpoint shards:  90% Completed | 27/30 [03:09<00:20,  6.70s/it]
Loading safetensors checkpoint shards:  93% Completed | 28/30 [03:15<00:12,  6.46s/it]
Loading safetensors checkpoint shards:  97% Completed | 29/30 [03:21<00:06,  6.34s/it]
Loading safetensors checkpoint shards: 100% Completed | 30/30 [03:28<00:00,  6.50s/it]
Loading safetensors checkpoint shards: 100% Completed | 30/30 [03:28<00:00,  6.95s/it]

[36m(RayWorkerWrapper pid=717117)[0m INFO 01-22 21:13:17 weight_utils.py:242] Using model weights format ['*.safetensors']
[36m(RayWorkerWrapper pid=717117)[0m INFO 01-22 21:16:46 model_runner.py:1025] Loading model weights took 18.4395 GB
INFO 01-22 21:16:46 model_runner.py:1025] Loading model weights took 18.4395 GB
INFO 01-22 21:16:54 distributed_gpu_executor.py:57] # GPU blocks: 20819, # CPU blocks: 1638
slurmstepd: error: *** JOB 413182 ON evc47 CANCELLED AT 2025-01-23T13:52:49 ***
slurmstepd: error: *** JOB 413182 STEPD TERMINATED ON evc47 AT 2025-01-23T13:54:51 DUE TO JOB NOT ENDING WITH SIGNALS ***
slurmstepd: error: Container 716652 in cgroup plugin has 47 processes, giving up after 127 sec
