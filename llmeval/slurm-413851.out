loaded anaconda
loaded cuda
activated conda environment
changed directory to /home/jsalvador/projects/llmeval
[[33mINFO[0m] running infill_solve using meta-llama/Llama-3.3-70B-Instruct
[[33mINFO[0m] fetching subsample IDs
counting prompt variations
[[33mINFO[0m] unique template_name query took 1425.45 seconds
[[33mINFO[0m] unique template_id query took 1603.88 seconds
[[33mINFO[0m] unique sys_id query took 836.74 seconds
fitb_l0, tids: 1, sids: 6
[[33mINFO[0m] counting samples from each query
[[33mINFO[0m] counting samples took 0.18 seconds
[[33mINFO[0m] unique template_id query took 40.74 seconds
[[33mINFO[0m] unique sys_id query took 39.05 seconds
fitb_l1, tids: 4, sids: 6
[[33mINFO[0m] counting samples from each query
[[33mINFO[0m] counting samples took 0.07 seconds
[[33mINFO[0m] unique template_id query took 39.93 seconds
[[33mINFO[0m] unique sys_id query took 39.00 seconds
fitb_l2, tids: 5, sids: 6
[[33mINFO[0m] counting samples from each query
[[33mINFO[0m] counting samples took 0.09 seconds
[[33mINFO[0m] unique template_id query took 39.03 seconds
[[33mINFO[0m] unique sys_id query took 39.15 seconds
fitb_l3, tids: 5, sids: 6
[[33mINFO[0m] counting samples from each query
[[33mINFO[0m] counting samples took 0.10 seconds
[[33mINFO[0m] unique template_id query took 41.04 seconds
[[33mINFO[0m] unique sys_id query took 39.25 seconds
fitb_l4, tids: 6, sids: 6
[[33mINFO[0m] counting samples from each query
[[33mINFO[0m] counting samples took 0.11 seconds
[[33mINFO[0m] batch_size: 1000, limit: 1000, N: 126000, N_batch: 126
creating generator function
[[33mINFO[0m] loading model: meta-llama/Llama-3.3-70B-Instruct
WARNING 01-25 20:33:52 config.py:319] bitsandbytes quantization is not fully optimized yet. The speed can be slower than non-quantized models.
WARNING 01-25 20:33:52 arg_utils.py:930] Chunked prefill is enabled by default for models with max_model_len > 32K. Currently, chunked prefill might not work with some features or models. If you encounter any issues, please disable chunked prefill by setting --enable-chunked-prefill=False.
INFO 01-25 20:33:52 config.py:1010] Chunked prefill is enabled with max_num_batched_tokens=512.
WARNING 01-25 20:33:52 config.py:389] To see benefits of async output processing, enable CUDA graph. Since, enforce-eager is enabled, async output processor cannot be used
2025-01-25 20:34:21,418	INFO worker.py:1821 -- Started a local Ray instance.
INFO 01-25 20:34:50 ray_utils.py:183] Waiting for creating a placement group of specs for 10 seconds. specs=[{'node:172.17.11.35': 0.001, 'GPU': 1.0}, {'GPU': 1.0}]. Check `ray status` to see if you have enough resources.
INFO 01-25 20:34:52 llm_engine.py:226] Initializing an LLM engine (v0.6.1.dev238+ge2c6e0a82) with config: model='meta-llama/Llama-3.3-70B-Instruct', speculative_config=None, tokenizer='meta-llama/Llama-3.3-70B-Instruct', skip_tokenizer_init=False, tokenizer_mode=auto, revision=None, override_neuron_config=None, rope_scaling=None, rope_theta=None, tokenizer_revision=None, trust_remote_code=True, dtype=torch.bfloat16, max_seq_len=50000, download_dir='/lustre/fs1/home/jsalvador/projects/llmeval/data/llm_cache', load_format=LoadFormat.BITSANDBYTES, tensor_parallel_size=2, pipeline_parallel_size=1, disable_custom_all_reduce=False, quantization=bitsandbytes, enforce_eager=True, kv_cache_dtype=auto, quantization_param_path=None, device_config=cuda, decoding_config=DecodingConfig(guided_decoding_backend='outlines'), observability_config=ObservabilityConfig(otlp_traces_endpoint=None, collect_model_forward_time=False, collect_model_execute_time=False), seed=1737855231, served_model_name=meta-llama/Llama-3.3-70B-Instruct, use_v2_block_manager=False, num_scheduler_steps=1, multi_step_stream_outputs=False, enable_prefix_caching=False, use_async_output_proc=False, use_cached_outputs=False, mm_processor_kwargs=None)
INFO 01-25 20:34:53 ray_gpu_executor.py:134] use_ray_spmd_worker: False
INFO 01-25 20:36:39 utils.py:992] Found nccl from library libnccl.so.2
INFO 01-25 20:36:39 pynccl.py:63] vLLM is using nccl==2.20.5
[36m(RayWorkerWrapper pid=2838337)[0m INFO 01-25 20:36:39 utils.py:992] Found nccl from library libnccl.so.2
[36m(RayWorkerWrapper pid=2838337)[0m INFO 01-25 20:36:39 pynccl.py:63] vLLM is using nccl==2.20.5
INFO 01-25 20:36:42 custom_all_reduce_utils.py:242] reading GPU P2P access cache from /home/jsalvador/.cache/vllm/gpu_p2p_access_cache_for_0,1.json
[36m(RayWorkerWrapper pid=2838337)[0m INFO 01-25 20:36:42 custom_all_reduce_utils.py:242] reading GPU P2P access cache from /home/jsalvador/.cache/vllm/gpu_p2p_access_cache_for_0,1.json
INFO 01-25 20:36:42 shm_broadcast.py:241] vLLM message queue communication handle: Handle(connect_ip='127.0.0.1', local_reader_ranks=[1], buffer=<vllm.distributed.device_communicators.shm_broadcast.ShmRingBuffer object at 0x14cfb015bd90>, local_subscribe_port=52589, remote_subscribe_port=None)
INFO 01-25 20:36:42 model_runner.py:1014] Starting to load model meta-llama/Llama-3.3-70B-Instruct...
[36m(RayWorkerWrapper pid=2838337)[0m INFO 01-25 20:36:42 model_runner.py:1014] Starting to load model meta-llama/Llama-3.3-70B-Instruct...
INFO 01-25 20:36:47 loader.py:1014] Loading weights with BitsAndBytes quantization.  May take a while ...
[36m(RayWorkerWrapper pid=2838337)[0m INFO 01-25 20:36:47 loader.py:1014] Loading weights with BitsAndBytes quantization.  May take a while ...
INFO 01-25 20:36:47 weight_utils.py:242] Using model weights format ['*.safetensors']
[36m(RayWorkerWrapper pid=2838337)[0m INFO 01-25 20:36:47 weight_utils.py:242] Using model weights format ['*.safetensors']
Loading safetensors checkpoint shards:   0% Completed | 0/30 [00:00<?, ?it/s]
Loading safetensors checkpoint shards:   3% Completed | 1/30 [00:08<04:00,  8.30s/it]
Loading safetensors checkpoint shards:   7% Completed | 2/30 [00:16<03:53,  8.34s/it]
Loading safetensors checkpoint shards:  10% Completed | 3/30 [00:23<03:28,  7.71s/it]
Loading safetensors checkpoint shards:  13% Completed | 4/30 [00:30<03:10,  7.31s/it]
Loading safetensors checkpoint shards:  17% Completed | 5/30 [00:35<02:47,  6.69s/it]
Loading safetensors checkpoint shards:  20% Completed | 6/30 [00:44<02:58,  7.44s/it]
Loading safetensors checkpoint shards:  23% Completed | 7/30 [00:52<02:52,  7.52s/it]
Loading safetensors checkpoint shards:  27% Completed | 8/30 [00:59<02:43,  7.44s/it]
Loading safetensors checkpoint shards:  30% Completed | 9/30 [01:07<02:37,  7.51s/it]
Loading safetensors checkpoint shards:  33% Completed | 10/30 [01:14<02:26,  7.31s/it]
Loading safetensors checkpoint shards:  37% Completed | 11/30 [01:22<02:23,  7.56s/it]
Loading safetensors checkpoint shards:  40% Completed | 12/30 [01:30<02:16,  7.60s/it]
Loading safetensors checkpoint shards:  43% Completed | 13/30 [01:37<02:07,  7.51s/it]
Loading safetensors checkpoint shards:  47% Completed | 14/30 [01:44<01:58,  7.38s/it]
Loading safetensors checkpoint shards:  50% Completed | 15/30 [01:50<01:45,  7.00s/it]
Loading safetensors checkpoint shards:  53% Completed | 16/30 [01:58<01:40,  7.19s/it]
Loading safetensors checkpoint shards:  57% Completed | 17/30 [02:06<01:37,  7.51s/it]
Loading safetensors checkpoint shards:  60% Completed | 18/30 [02:12<01:25,  7.09s/it]
Loading safetensors checkpoint shards:  63% Completed | 19/30 [02:20<01:21,  7.38s/it]
Loading safetensors checkpoint shards:  67% Completed | 20/30 [02:26<01:09,  6.98s/it]
Loading safetensors checkpoint shards:  70% Completed | 21/30 [02:33<01:03,  7.01s/it]
Loading safetensors checkpoint shards:  73% Completed | 22/30 [02:40<00:54,  6.80s/it]
Loading safetensors checkpoint shards:  77% Completed | 23/30 [02:45<00:44,  6.30s/it]
Loading safetensors checkpoint shards:  80% Completed | 24/30 [02:52<00:38,  6.45s/it]
Loading safetensors checkpoint shards:  83% Completed | 25/30 [02:59<00:33,  6.68s/it]
Loading safetensors checkpoint shards:  87% Completed | 26/30 [03:06<00:27,  6.92s/it]
Loading safetensors checkpoint shards:  90% Completed | 27/30 [03:13<00:20,  6.76s/it]
Loading safetensors checkpoint shards:  93% Completed | 28/30 [03:19<00:13,  6.53s/it]
Loading safetensors checkpoint shards:  97% Completed | 29/30 [03:25<00:06,  6.60s/it]
Loading safetensors checkpoint shards: 100% Completed | 30/30 [03:33<00:00,  6.81s/it]
Loading safetensors checkpoint shards: 100% Completed | 30/30 [03:33<00:00,  7.11s/it]

INFO 01-25 20:40:21 model_runner.py:1025] Loading model weights took 18.4395 GB
[36m(RayWorkerWrapper pid=2838337)[0m INFO 01-25 20:40:21 model_runner.py:1025] Loading model weights took 18.4395 GB
INFO 01-25 20:40:28 distributed_gpu_executor.py:57] # GPU blocks: 20819, # CPU blocks: 1638
[[33mINFO[0m] begin collecting responses
generating responses:   0%|          | 0/378 [00:00<?, ?it/s]generating responses:  98%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–Š| 369/378 [24:05<00:35,  3.92s/it][2025-01-25 22:13:11,967 E 2837118 2842016] gcs_rpc_client.h:664: Failed to connect to GCS within 60 seconds. GCS may have been killed. It's either GCS is terminated by `ray stop` or is killed unexpectedly. If it is killed unexpectedly, see the log file gcs_server.out. https://docs.ray.io/en/master/ray-observability/user-guides/configure-logging.html#logging-directory-structure. The program will terminate.
/home/jsalvador/.conda/envs/llmeval/lib/python3.11/multiprocessing/resource_tracker.py:254: UserWarning: resource_tracker: There appear to be 1 leaked shared_memory objects to clean up at shutdown
  warnings.warn('resource_tracker: There appear to be %d '
